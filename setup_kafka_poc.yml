---
- name: 游낾 Configura칞칚o Completa do POC Kafka (KRaft, Kafka UI, Python API e Portainer)
  # Se voc칡 estiver rodando na sua pr칩pria m치quina, troque 'seu_host_docker' por 'localhost' ou 'all'
  hosts: seu_host_docker 
  become: yes # Para instalar pacotes e gerenciar o Docker

  vars:
    project_dir: /opt/kafka-poc
    host_user: seu_usuario # Mude para o seu usu치rio SSH (Ex: weber)

  tasks:
    # -----------------------------------------------------------------
    # BLOC 1: PR칄-REQUISITOS E DEPEND칅NCIAS
    # -----------------------------------------------------------------
    - name: Garantir que o Docker e o m칩dulo Python do Compose estejam instalados
      ansible.builtin.apt:
        name: 
          - docker.io
          - python3-pip
        state: present
        update_cache: yes
      tags: [prereq]

    - name: Instalar depend칡ncias Python (docker) para Ansible (necess치rio para os m칩dulos community.docker)
      ansible.builtin.pip:
        name: docker
        state: present
      tags: [prereq]
      
    # Nota: A cole칞칚o 'community.docker' deve ser instalada manualmente via 'ansible-galaxy collection install community.docker'

    # -----------------------------------------------------------------
    # BLOC 2: IMPLANTAR O PORTAINER (Ferramenta de Gerenciamento)
    # -----------------------------------------------------------------
    - name: Criar volume persistente para Portainer
      community.docker.docker_volume:
        name: portainer_data
      tags: [portainer]

    - name: Iniciar o Portainer CE na porta 9000
      community.docker.docker_container:
        name: portainer
        image: portainer/portainer-ce:latest
        state: started
        restart_policy: always
        ports:
          - "9000:9000"
        volumes:
          - /var/run/docker.sock:/var/run/docker.sock
          - portainer_data:/data
      tags: [portainer]

    # -----------------------------------------------------------------
    # BLOC 3: IMPLANTAR O STACK KAFKA (Kafka, UI, Python API)
    # -----------------------------------------------------------------
    - name: Criar diret칩rio do projeto Kafka
      ansible.builtin.file:
        path: "{{ project_dir }}"
        state: directory
        owner: "{{ host_user }}" 
        group: "{{ host_user }}"
        mode: '0755'
      tags: [kafka-stack]

    - name: Copiar todos os arquivos de configura칞칚o (docker-compose, Dockerfile, etc.)
      ansible.builtin.copy:
        src: files/
        dest: "{{ project_dir }}/"
        owner: "{{ host_user }}"
        group: "{{ host_user }}"
        mode: '0644'
      tags: [kafka-stack]

    # CORRE칂츾O CR칈TICA: Uso do novo m칩dulo docker_compose_v2
    - name: Subir o stack Docker Compose (Isso far치 o 'docker compose up -d --build')
      community.docker.docker_compose_v2:
        project_src: "{{ project_dir }}"
        state: present
        # O Ansible far치 o rebuild da imagem da API Python se o Dockerfile/c칩digo tiver mudado
      tags: [kafka-stack]

- name: 游닉 Verifica칞칚o Final
  hosts: seu_host_docker
  tasks:
    - name: Exibir URLs de acesso
      ansible.builtin.debug:
        msg: 
          - "Configura칞칚o conclu칤da com sucesso. Verifique os servi칞os:"
          - "Portainer URL (Gerenciamento): http://{{ ansible_host | default('localhost') }}:9000"
          - "Kafka UI URL (Monitoramento): http://{{ ansible_host | default('localhost') }}:8080"
          - "Python API URL (Producer/Consumer Teste): http://{{ ansible_host | default('localhost') }}:5000"